# Generated by Django 4.2.23 on 2025-07-18 13:33

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ به\u200cروزرسانی')),
                ('name', models.CharField(max_length=100, verbose_name='نام دسته\u200cبندی')),
                ('slug', models.SlugField(blank=True, max_length=100)),
                ('description', models.TextField(blank=True, verbose_name='توضیحات')),
                ('image', models.ImageField(blank=True, null=True, upload_to='category_images/', verbose_name='تصویر')),
                ('is_active', models.BooleanField(default=True, verbose_name='فعال')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='ترتیب نمایش')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='shop.category', verbose_name='دسته\u200cبندی والد')),
            ],
            options={
                'verbose_name': 'دسته\u200cبندی',
                'verbose_name_plural': 'دسته\u200cبندی\u200cها',
                'db_table': 'shop_category',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ به\u200cروزرسانی')),
                ('title', models.CharField(blank=True, max_length=255, verbose_name='عنوان')),
                ('text', models.TextField(verbose_name='متن نظر')),
                ('is_verified_purchase', models.BooleanField(default=False, verbose_name='خرید تایید شده')),
                ('is_approved', models.BooleanField(default=False, verbose_name='تایید شده')),
                ('helpful_count', models.PositiveIntegerField(default=0, verbose_name='تعداد مفید')),
            ],
            options={
                'verbose_name': 'نظر',
                'verbose_name_plural': 'نظرات',
                'db_table': 'shop_comment',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('order_number', models.CharField(blank=True, max_length=20, unique=True, verbose_name='شماره سفارش')),
                ('status', models.CharField(choices=[('pending', 'در انتظار'), ('confirmed', 'تایید شده'), ('processing', 'در حال پردازش'), ('shipped', 'ارسال شده'), ('delivered', 'تحویل داده شده'), ('cancelled', 'لغو شده'), ('refunded', 'مرجوع شده')], default='pending', max_length=20, verbose_name='وضعیت سفارش')),
                ('payment_status', models.CharField(choices=[('pending', 'در انتظار پرداخت'), ('paid', 'پرداخت شده'), ('failed', 'پرداخت ناموفق'), ('refunded', 'مرجوع شده')], default='pending', max_length=20, verbose_name='وضعیت پرداخت')),
                ('total_amount', models.DecimalField(decimal_places=0, max_digits=12, verbose_name='مبلغ کل')),
                ('tax_amount', models.DecimalField(decimal_places=0, default=Decimal('0'), max_digits=12, verbose_name='مبلغ مالیات')),
                ('shipping_amount', models.DecimalField(decimal_places=0, default=Decimal('0'), max_digits=12, verbose_name='هزینه ارسال')),
                ('discount_amount', models.DecimalField(decimal_places=0, default=Decimal('0'), max_digits=12, verbose_name='مبلغ تخفیف')),
                ('payment_method', models.CharField(blank=True, max_length=50, verbose_name='روش پرداخت')),
                ('payment_id', models.CharField(blank=True, max_length=255, verbose_name='شناسه پرداخت')),
                ('payment_gateway', models.CharField(blank=True, max_length=50, verbose_name='درگاه پرداخت')),
                ('delivery_method', models.CharField(choices=[('standard', 'ارسال عادی'), ('express', 'ارسال سریع'), ('same_day', 'ارسال همان روز'), ('pickup', 'تحویل حضوری')], default='standard', max_length=20, verbose_name='روش تحویل')),
                ('expected_delivery_date', models.DateField(blank=True, null=True, verbose_name='تاریخ تحویل مورد انتظار')),
                ('tracking_number', models.CharField(blank=True, max_length=100, verbose_name='کد رهگیری')),
                ('shipping_address', models.JSONField(default=dict, verbose_name='آدرس ارسال')),
                ('billing_address', models.JSONField(default=dict, verbose_name='آدرس صورتحساب')),
                ('customer_name', models.CharField(max_length=255, verbose_name='نام مشتری')),
                ('customer_phone', models.CharField(max_length=20, verbose_name='تلفن مشتری')),
                ('customer_email', models.EmailField(blank=True, max_length=254, verbose_name='ایمیل مشتری')),
                ('customer_notes', models.TextField(blank=True, verbose_name='یادداشت مشتری')),
                ('admin_notes', models.TextField(blank=True, verbose_name='یادداشت مدیر')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ به\u200cروزرسانی')),
                ('confirmed_at', models.DateTimeField(blank=True, null=True, verbose_name='تاریخ تایید')),
                ('shipped_at', models.DateTimeField(blank=True, null=True, verbose_name='تاریخ ارسال')),
                ('delivered_at', models.DateTimeField(blank=True, null=True, verbose_name='تاریخ تحویل')),
            ],
            options={
                'verbose_name': 'سفارش',
                'verbose_name_plural': 'سفارشات',
                'db_table': 'storefront_order',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ به\u200cروزرسانی')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255, verbose_name='عنوان محصول')),
                ('slug', models.SlugField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True, verbose_name='توضیحات')),
                ('short_description', models.CharField(blank=True, max_length=500, verbose_name='توضیحات کوتاه')),
                ('price', models.DecimalField(decimal_places=0, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='قیمت')),
                ('compare_price', models.DecimalField(blank=True, decimal_places=0, max_digits=12, null=True, verbose_name='قیمت مقایسه')),
                ('cost_price', models.DecimalField(blank=True, decimal_places=0, max_digits=12, null=True, verbose_name='قیمت تمام\u200cشده')),
                ('sku', models.CharField(blank=True, max_length=100, verbose_name='کد محصول')),
                ('barcode', models.CharField(blank=True, max_length=100, verbose_name='بارکد')),
                ('stock', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='موجودی')),
                ('low_stock_threshold', models.IntegerField(default=5, verbose_name='حد کمبود موجودی')),
                ('track_inventory', models.BooleanField(default=True, verbose_name='ردیابی موجودی')),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='وزن')),
                ('dimensions', models.CharField(blank=True, help_text='L x W x H', max_length=100, verbose_name='ابعاد')),
                ('is_active', models.BooleanField(default=True, verbose_name='فعال')),
                ('is_featured', models.BooleanField(default=False, verbose_name='ویژه')),
                ('is_digital', models.BooleanField(default=False, verbose_name='دیجیتال')),
                ('meta_title', models.CharField(blank=True, max_length=255, verbose_name='عنوان متا')),
                ('meta_description', models.TextField(blank=True, max_length=320, verbose_name='توضیحات متا')),
                ('published_at', models.DateTimeField(blank=True, null=True, verbose_name='تاریخ انتشار')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='shop.category', verbose_name='دسته\u200cبندی')),
            ],
            options={
                'verbose_name': 'محصول',
                'verbose_name_plural': 'محصولات',
                'db_table': 'shop_product',
            },
        ),
        migrations.CreateModel(
            name='ProductAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ به\u200cروزرسانی')),
                ('name', models.CharField(max_length=100, verbose_name='نام ویژگی')),
                ('slug', models.SlugField(blank=True, max_length=100)),
                ('attribute_type', models.CharField(choices=[('text', 'متن'), ('number', 'عدد'), ('boolean', 'بولی'), ('choice', 'انتخابی'), ('color', 'رنگ'), ('date', 'تاریخ')], max_length=20, verbose_name='نوع ویژگی')),
                ('is_required', models.BooleanField(default=False, verbose_name='اجباری')),
                ('is_filterable', models.BooleanField(default=True, verbose_name='قابل فیلتر')),
                ('is_searchable', models.BooleanField(default=False, verbose_name='قابل جستجو')),
                ('choices', models.JSONField(blank=True, default=list, verbose_name='گزینه\u200cها')),
                ('unit', models.CharField(blank=True, max_length=20, verbose_name='واحد')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='ترتیب نمایش')),
            ],
            options={
                'verbose_name': 'ویژگی محصول',
                'verbose_name_plural': 'ویژگی\u200cهای محصول',
                'db_table': 'shop_product_attribute',
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ به\u200cروزرسانی')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='نام فروشگاه')),
                ('name_en', models.CharField(blank=True, max_length=255, verbose_name='نام انگلیسی فروشگاه')),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('description', models.TextField(blank=True, verbose_name='توضیحات')),
                ('domain', models.CharField(max_length=255, unique=True, verbose_name='دامنه')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='store_logos/', verbose_name='لوگو')),
                ('is_active', models.BooleanField(default=True, verbose_name='فعال')),
                ('is_approved', models.BooleanField(default=False, verbose_name='تایید شده')),
                ('currency', models.CharField(default='IRR', max_length=3, verbose_name='واحد پول')),
                ('tax_rate', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), max_digits=5, verbose_name='نرخ مالیات')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='ایمیل')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='تلفن')),
                ('address', models.TextField(blank=True, verbose_name='آدرس')),
                ('admin_notes', models.TextField(blank=True, verbose_name='یادداشت\u200cهای مدیر')),
                ('requested_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ درخواست')),
                ('approved_at', models.DateTimeField(blank=True, null=True, verbose_name='تاریخ تایید')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stores', to=settings.AUTH_USER_MODEL, verbose_name='مالک فروشگاه')),
            ],
            options={
                'verbose_name': 'فروشگاه',
                'verbose_name_plural': 'فروشگاه\u200cها',
                'db_table': 'shop_store',
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ به\u200cروزرسانی')),
                ('score', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='امتیاز')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.comment', verbose_name='نظر')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='shop.product', verbose_name='محصول')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
            ],
            options={
                'verbose_name': 'امتیاز',
                'verbose_name_plural': 'امتیازات',
                'db_table': 'shop_rating',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ به\u200cروزرسانی')),
                ('image', models.ImageField(upload_to='product_images/', verbose_name='تصویر')),
                ('alt_text', models.CharField(blank=True, max_length=255, verbose_name='متن جایگزین')),
                ('is_primary', models.BooleanField(default=False, verbose_name='تصویر اصلی')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='ترتیب نمایش')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='shop.product', verbose_name='محصول')),
            ],
            options={
                'verbose_name': 'تصویر محصول',
                'verbose_name_plural': 'تصاویر محصول',
                'db_table': 'shop_product_image',
                'ordering': ['sort_order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductAttributeValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ به\u200cروزرسانی')),
                ('value', models.TextField(verbose_name='مقدار')),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.productattribute', verbose_name='ویژگی')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attribute_values', to='shop.product', verbose_name='محصول')),
            ],
            options={
                'verbose_name': 'مقدار ویژگی محصول',
                'verbose_name_plural': 'مقادیر ویژگی محصول',
                'db_table': 'shop_product_attribute_value',
            },
        ),
        migrations.AddField(
            model_name='productattribute',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attributes', to='shop.store', verbose_name='فروشگاه'),
        ),
        migrations.AddField(
            model_name='product',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='shop.store', verbose_name='فروشگاه'),
        ),
        migrations.CreateModel(
            name='PaymentGateway',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gateway_type', models.CharField(choices=[('zarinpal', 'زرین\u200cپال'), ('mellat', 'بانک ملت'), ('parsian', 'بانک پارسیان'), ('saderat', 'بانک صادرات'), ('pasargad', 'بانک پاسارگاد'), ('saman', 'بانک سامان')], max_length=20, verbose_name='نوع درگاه')),
                ('is_active', models.BooleanField(default=True, verbose_name='فعال')),
                ('settings', models.JSONField(default=dict, verbose_name='تنظیمات درگاه')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ به\u200cروزرسانی')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_gateways', to='shop.store', verbose_name='فروشگاه')),
            ],
            options={
                'verbose_name': 'درگاه پرداخت',
                'verbose_name_plural': 'درگاه\u200cهای پرداخت',
                'db_table': 'storefront_payment_gateway',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(verbose_name='تعداد')),
                ('price_at_order', models.DecimalField(decimal_places=0, max_digits=12, verbose_name='قیمت هنگام سفارش')),
                ('product_title', models.CharField(max_length=255, verbose_name='عنوان محصول')),
                ('product_sku', models.CharField(blank=True, max_length=100, verbose_name='کد محصول')),
                ('product_attributes', models.JSONField(default=dict, verbose_name='ویژگی\u200cهای محصول')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='shop.order', verbose_name='سفارش')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.product', verbose_name='محصول')),
            ],
            options={
                'verbose_name': 'آیتم سفارش',
                'verbose_name_plural': 'آیتم\u200cهای سفارش',
                'db_table': 'storefront_order_item',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='shop.store', verbose_name='فروشگاه'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL, verbose_name='کاربر'),
        ),
        migrations.CreateModel(
            name='DeliveryZone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='نام منطقه')),
                ('description', models.TextField(blank=True, verbose_name='توضیحات')),
                ('standard_price', models.DecimalField(decimal_places=0, default=0, max_digits=10, verbose_name='قیمت ارسال عادی')),
                ('express_price', models.DecimalField(decimal_places=0, default=0, max_digits=10, verbose_name='قیمت ارسال سریع')),
                ('same_day_price', models.DecimalField(decimal_places=0, default=0, max_digits=10, verbose_name='قیمت ارسال همان روز')),
                ('standard_days', models.PositiveIntegerField(default=3, verbose_name='روزهای ارسال عادی')),
                ('express_days', models.PositiveIntegerField(default=1, verbose_name='روزهای ارسال سریع')),
                ('same_day_available', models.BooleanField(default=False, verbose_name='ارسال همان روز موجود')),
                ('free_delivery_threshold', models.DecimalField(decimal_places=0, default=0, max_digits=12, verbose_name='حد آستانه ارسال رایگان')),
                ('is_active', models.BooleanField(default=True, verbose_name='فعال')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delivery_zones', to='shop.store', verbose_name='فروشگاه')),
            ],
            options={
                'verbose_name': 'منطقه تحویل',
                'verbose_name_plural': 'مناطق تحویل',
                'db_table': 'storefront_delivery_zone',
            },
        ),
        migrations.CreateModel(
            name='CustomerAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='عنوان آدرس')),
                ('recipient_name', models.CharField(max_length=255, verbose_name='نام گیرنده')),
                ('phone', models.CharField(max_length=20, verbose_name='تلفن')),
                ('province', models.CharField(max_length=100, verbose_name='استان')),
                ('city', models.CharField(max_length=100, verbose_name='شهر')),
                ('address', models.TextField(verbose_name='آدرس')),
                ('postal_code', models.CharField(max_length=20, verbose_name='کد پستی')),
                ('is_default', models.BooleanField(default=False, verbose_name='آدرس پیش\u200cفرض')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
            ],
            options={
                'verbose_name': 'آدرس مشتری',
                'verbose_name_plural': 'آدرس\u200cهای مشتری',
                'db_table': 'storefront_customer_address',
            },
        ),
        migrations.AddField(
            model_name='comment',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='shop.product', verbose_name='محصول'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='کاربر'),
        ),
        migrations.AddField(
            model_name='category',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='shop.store', verbose_name='فروشگاه'),
        ),
        migrations.CreateModel(
            name='BulkImportLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ به\u200cروزرسانی')),
                ('filename', models.CharField(max_length=255, verbose_name='نام فایل')),
                ('file_path', models.CharField(max_length=500, verbose_name='مسیر فایل')),
                ('status', models.CharField(choices=[('processing', 'در حال پردازش'), ('completed', 'تکمیل شده'), ('failed', 'ناموفق'), ('partial', 'موفقیت جزئی')], default='processing', max_length=20, verbose_name='وضعیت')),
                ('total_rows', models.IntegerField(default=0, verbose_name='تعداد کل ردیف\u200cها')),
                ('successful_rows', models.IntegerField(default=0, verbose_name='ردیف\u200cهای موفق')),
                ('failed_rows', models.IntegerField(default=0, verbose_name='ردیف\u200cهای ناموفق')),
                ('categories_created', models.IntegerField(default=0, verbose_name='دسته\u200cبندی\u200cهای ایجاد شده')),
                ('products_created', models.IntegerField(default=0, verbose_name='محصولات ایجاد شده')),
                ('products_updated', models.IntegerField(default=0, verbose_name='محصولات به\u200cروزرسانی شده')),
                ('error_details', models.JSONField(default=list, verbose_name='جزئیات خطا')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='import_logs', to='shop.store', verbose_name='فروشگاه')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
            ],
            options={
                'verbose_name': 'لاگ ایمپورت گروهی',
                'verbose_name_plural': 'لاگ\u200cهای ایمپورت گروهی',
                'db_table': 'shop_bulk_import_log',
            },
        ),
        migrations.CreateModel(
            name='Basket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='تعداد')),
                ('price_at_add', models.DecimalField(decimal_places=0, max_digits=12, verbose_name='قیمت هنگام افزودن')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ به\u200cروزرسانی')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.product', verbose_name='محصول')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='basket_items', to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
            ],
            options={
                'verbose_name': 'سبد خرید',
                'verbose_name_plural': 'سبدهای خرید',
                'db_table': 'storefront_basket',
            },
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.product', verbose_name='محصول')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wishlist_items', to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
            ],
            options={
                'verbose_name': 'لیست علاقه\u200cمندی',
                'verbose_name_plural': 'لیست\u200cهای علاقه\u200cمندی',
                'db_table': 'storefront_wishlist',
                'unique_together': {('user', 'product')},
            },
        ),
        migrations.AddIndex(
            model_name='store',
            index=models.Index(fields=['owner'], name='shop_store_owner_i_6195d9_idx'),
        ),
        migrations.AddIndex(
            model_name='store',
            index=models.Index(fields=['is_active', 'is_approved'], name='shop_store_is_acti_77c8d9_idx'),
        ),
        migrations.AddIndex(
            model_name='store',
            index=models.Index(fields=['domain'], name='shop_store_domain_67696f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='rating',
            unique_together={('product', 'user')},
        ),
        migrations.AddIndex(
            model_name='productattributevalue',
            index=models.Index(fields=['product'], name='shop_produc_product_40e904_idx'),
        ),
        migrations.AddIndex(
            model_name='productattributevalue',
            index=models.Index(fields=['attribute'], name='shop_produc_attribu_7d1e66_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='productattributevalue',
            unique_together={('product', 'attribute')},
        ),
        migrations.AddIndex(
            model_name='productattribute',
            index=models.Index(fields=['store', 'is_filterable'], name='shop_produc_store_i_a699ea_idx'),
        ),
        migrations.AddIndex(
            model_name='productattribute',
            index=models.Index(fields=['attribute_type'], name='shop_produc_attribu_7e2b9c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='productattribute',
            unique_together={('store', 'slug')},
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['store', 'is_active'], name='shop_produc_store_i_c895ad_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['category'], name='shop_produc_categor_d249e3_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['is_featured'], name='shop_produc_is_feat_e938b5_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['sku'], name='shop_produc_sku_9aec58_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='product',
            unique_together={('store', 'slug')},
        ),
        migrations.AlterUniqueTogether(
            name='paymentgateway',
            unique_together={('store', 'gateway_type')},
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['user'], name='storefront__user_id_66f034_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['store'], name='storefront__store_i_2b3c60_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['status'], name='storefront__status_f25259_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['payment_status'], name='storefront__payment_1737d6_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['created_at'], name='storefront__created_555481_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='deliveryzone',
            unique_together={('store', 'name')},
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['product', 'is_approved'], name='shop_commen_product_2c2dc5_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['user'], name='shop_commen_user_id_1e7887_idx'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['store', 'is_active'], name='shop_catego_store_i_04c918_idx'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['parent'], name='shop_catego_parent__bb774a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='category',
            unique_together={('store', 'slug')},
        ),
        migrations.AddIndex(
            model_name='bulkimportlog',
            index=models.Index(fields=['store', 'created_at'], name='shop_bulk_i_store_i_48922f_idx'),
        ),
        migrations.AddIndex(
            model_name='bulkimportlog',
            index=models.Index(fields=['user'], name='shop_bulk_i_user_id_c17aab_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='basket',
            unique_together={('user', 'product')},
        ),
    ]
